<?xml version='1.0' encoding='utf-8' ?>
<config version='1.0'
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="config.xsd" >
	<!--
	# ===========================================================================
	# Copyright (C) 2013  Gerhard Hepp
	#
	# This program is free software; you can redistribute it and/or modify it under the terms of
	# the GNU General Public License as published by the Free Software Foundation; either version 2
	# of the License, or (at your option) any later version.
	#
	# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
	# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	# See the GNU General Public License for more details.
	#
	# You should have received a copy of the GNU General Public License along with this program; if
	# not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
	# MA 02110, USA
	# ===========================================================================
	-->

	<description>
	    Stepper configuration. Unipolar Stepper, connected with a ULN2803 darlington driver.
	    Switch input on IKG.IO.4 (microswitch for position detect, inverted)
	</description>

	<!-- =========================================================================== -->
	
	<adapter class='adapter.stepper.UnipolarStepperStep' name='stepper'>
		
		<description>stepper control for unipolar stepper
		Allows for discrete switch signals br0.0, br0.1, br1.0, br1.1
		or binary inputs 'pattern', e.g b0001, b0011, ...
        

		</description>
		
        <gpio port='IKG.IO.0' alias='br0.0'>
            <default dir='OUT' pull='PUD_OFF' default='low'  />
            <active dir='OUT' pull='PUD_OFF'/>
        </gpio>
        <gpio port='IKG.IO.1' alias='br0.1'>
            <default dir='OUT' pull='PUD_OFF' default='low' />
            <active dir='OUT' pull='PUD_OFF'/>
        </gpio>
        
        <gpio port='IKG.IO.2' alias='br1.0'>
            <default dir='OUT' pull='PUD_OFF' default='low' />
            <active dir='OUT' pull='PUD_OFF'/>
        </gpio>
        <gpio port='IKG.IO.3' alias='br1.1'>
            <default dir='OUT' pull='PUD_OFF' default='low' />
            <active dir='OUT' pull='PUD_OFF'/>
        </gpio>

        <input_value name='br0_0'>
            <variable name='br0.0'/>
        </input_value>
        <input_value name='br0_1'>
            <variable name='br0.1'/>
        </input_value>
        <input_value name='br1_0'>
            <variable name='br1.0'/>
        </input_value>
        <input_value name='br1_1'>
            <variable name='br1.1'/>
        </input_value>
        
        <input_value name='binaryPattern'>
            <variable name='pattern'/>
        </input_value>
        
	</adapter>

   <!-- =========================================================================== -->

    <adapter class='adapter.gpio.GpioInput' name='microschalter'>
        <!-- no description, urgg -->
        <gpio port='IKG.IO.4'>
            <default dir='IN' pull='PUD_UP'  />
            <active dir='IN' pull='PUD_UP'/>
        </gpio>
        <output_value name='button'>
            <sensor name='microschalter'/>
        </output_value>
        <parameter name='poll.interval' value='0.05' />
        <parameter name='value.inverse' value='true' />
    </adapter>

   <!-- =========================================================================== -->
	
    <adapter class='adapter.gpio.GpioStateOutput'  name='state'>
        <description>State display on IKG.IO.9</description>

        <gpio port='IKG.IO.9' alias='state'>
            <default dir='OUT'  default='low' />
            <active  dir='OUT'  default='low' />
        </gpio>
    </adapter>
 
</config>
