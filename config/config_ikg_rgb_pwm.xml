<?xml version='1.0' encoding='utf-8' ?>
<config version='1.0'
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="config.xsd" >
	<!--
	# ===========================================================================
	# Copyright (C) 2013  Gerhard Hepp
	#
	# This program is free software; you can redistribute it and/or modify it under the terms of
	# the GNU General Public License as published by the Free Software Foundation; either version 2
	# of the License, or (at your option) any later version.
	#
	# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
	# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	# See the GNU General Public License for more details.
	#
	# You should have received a copy of the GNU General Public License along with this program; if
	# not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
	# MA 02110, USA
	# ===========================================================================
	-->

	<description>
		Arbeitskreis Physical Computing am IKG.
		Ansteuerung einer RGB mit PWM.
		Die Kommandos sind als 'rgb_A_R', 'rgb_A_G', 'rgb_A_B' fuer scratch bezeichnet, 0..100.
		Jumper: 
            gesetzt:
                out.0, 1, 2 gesetzt.
                out2.0, 1, 2 gesetzt.
            offen:
               in.0 bis in.7 
               out.3 bis out.7 
               out2.3 bis out2.7 
    </description>
    
	<!-- =========================================================================== -->
	<adapter class='adapter.dma_pwm.DMA_PWM'  name='rgb_A_G'>
		<description>RGB_A, GRテ廸</description>

		<gpio port='IKG.IO.0'>
			<default dir='OUT'  default='high' />
			<active  dir='OUT'  default='low' />
		</gpio>
		
		<input_value name='rate'>
			<variable name='rgb_A_G'/>
		</input_value>
		
		<parameter name='frequency' value='50' />
		<parameter name='rate' value='90' />

	</adapter>
	<adapter class='adapter.dma_pwm.DMA_PWM'  name='rgb_A_R'>
		<description>RGB_A, ROT</description>

		<gpio port='IKG.IO.1'>
			<default dir='OUT'  default='high' />
			<active  dir='OUT'  default='low' />
		</gpio>
		
		<input_value name='rate'>
			<variable name='rgb_A_R'/>
		</input_value>
		
		<parameter name='frequency' value='50' />
		<parameter name='rate' value='90' />

	</adapter>
	<adapter class='adapter.dma_pwm.DMA_PWM'  name='rgb_A_B'>
		<description>RGB_A, Blau</description>

		<gpio port='IKG.IO.2'>
			<default dir='OUT'  default='high' />
			<active  dir='OUT'  default='low' />
		</gpio>
		
		<input_value name='rate'>
			<variable name='rgb_A_B'/>
		</input_value>
		
		<parameter name='frequency' value='50' />
		<parameter name='rate' value='90' />

	</adapter>

    <adapter class='adapter.gpio.GpioEventInput' name='button_s8'>
        <!-- no description, urgg -->
        <gpio port='IKG.IO.8'>
            <default dir='IN' pull='PUD_UP'  />
            <active dir='IN' pull='PUD_UP'/>
        </gpio>
        
        <output name='button_pressed'>
            <broadcast name='s8_pressed'/>
        </output>
        <output name='button_released'>
            <broadcast name='s8_released'/>
        </output>
        
        <parameter name='poll.interval' value='0.05' />
        <parameter name='value.inverse' value='true' />

    </adapter>

    <adapter class='adapter.gpio.GpioStateOutput'  name='state'>
        <description>State display on IKG.IO.9</description>

        <gpio port='IKG.IO.9' alias='state'>
            <default dir='OUT'  default='low' />
            <active  dir='OUT'  default='low' />
        </gpio>
    </adapter>

</config>
